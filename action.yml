name: Setup Terminus
description: "Install and configure the Pantheon CLI tool, Terminus."
branding:
  icon: "cloud"
  color: "yellow"
inputs:
  pantheon-machine-token:
    description: "Machine token used to authenticate with Pantheon."
    required: false
  terminus-version:
    description: |
      The full version of Terminus to install. If omitted, the latest version is used.
    required: false
  disable-cache:
    description: Disable session cache and force a new session to be initiated.
    required: false
    default: false

runs:
  using: composite
  steps:
    - name: Set Terminus version
      if: ${{ ! inputs.terminus-version }}
      shell: bash
      run: |
        TERMINUS_RELEASE=$(
          curl --silent \
            --header 'authorization: Bearer ${{ github.token }}' \
            "https://api.github.com/repos/pantheon-systems/terminus/releases/latest" \
            | perl -nle'print $& while m#"tag_name": "\K[^"]*#g'
        )
        echo "TERMINUS_RELEASE=$TERMINUS_RELEASE" >> $GITHUB_ENV

    - name: Install Terminus
      shell: bash
      run: |
        mkdir $HOME/terminus && cd $HOME/terminus
        echo "Installing Terminus v$TERMINUS_RELEASE"
        curl -L https://github.com/pantheon-systems/terminus/releases/download/$TERMINUS_RELEASE/terminus.phar --output terminus
        chmod +x terminus
        sudo ln -s ~/terminus/terminus /usr/local/bin/terminus
        mkdir -p ~/.terminus/{cache,plugins}
      env:
        TERMINUS_RELEASE: ${{ inputs.terminus-version || env.TERMINUS_RELEASE }}

    - uses: actions/cache@v3
      id: terminus-cache
      ## description: "Cache Terminus cache directory to eliminate auth API limits."
      with:
        path: $HOME/.terminus/
        key: ${{ runner.os }}-terminus
        restore-keys: |
            ${{ runner.os }}-terminus-

    - name: Login to Pantheon
      if: ${{ inputs.pantheon-machine-token }}
      shell: bash
      ## description: "Authenticate with Pantheon using a machine token only if a session has not already been established"
      run: |
        terminus auth:login || terminus auth:login --machine-token="${{ inputs.pantheon-machine-token }}"
